#include<stdio.h>
int main()
{
	int* p = NULL;//整形指针 - 指向整形的指针 - 可以存放整形的地址
	char* pc = NULL;//字符指针 - 指向字符的指针 - 可以存放字符的指针
					//数组指针 - 指向数组的指针 - 可以存放数组地址的指针
	int arr1[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };//这就是一个简单的数组
	int (*pa1)[10] = &arr1;//将数组的地址存起来，此时的pa1就是一个数组指针，其指向的类型是int，也就是说该指针是整形元素的地址，指向的是该整形元素地址中的内容


	char* arr2[5];//这是一个指针数组，该数组中的元素均为指针
	char* (*pa2)[5] = &arr2;//这是上面那个指针数组的数组指针，他就是上面那个数组的地址，该数组指针变量名为pa2，他所对应的地址中的数据类型


	printf("%p\n", arr1);
	printf("%p\n", &arr1);
	printf("%p\n", arr1+1);//数组名加一跳过一个元素，因为数组名是首元素地址，此时arr=&arr[0],完全等于
	printf("%p\n", &arr1+1);//&数组名加一跳过一个数组，但&数组名取出的是整个数组名，只不过整个数组名与数组首元素地址相同罢了
	return 0;
}