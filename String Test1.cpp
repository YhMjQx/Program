#include"String.h"
int main(){
	String s1("HYHYHY");
	s1.Display();
	String s2 = s1;
	s2.Display();
		//在这里调用默认拷贝构造函数，这是个浅拷贝
		//这是浅拷贝相当于是s2.str_ = s1.str_，别忘了，这两个都是指针，相当于把s1.str_这个指针赋给s2.str_
		//那么s2.str_与s1.str_共用同一块内存空间，那么就不能让delete两次，不然就会使内存重复释放
		//怎么解决这个问题呢，你们就是使用深拷贝，直接开辟新的内存空间来存储新的类对象
		//而一旦涉及到开辟新空间的问题都要用到深拷贝

	//但是现在代码依旧存在问题
	String s3;
	s3.Display();
	s3 = s2;//这里就又出问题了，问什么呢，是因为这样的话系统会自动调用默认等号运算符
			//而默认等号运算符又是浅拷贝，又是成员逐一赋值s2.str_ = s1.str_，这样又会导致空间销毁两次
			//为了解决这种情况，就需要我们自己实现符合String这个类的等号运算符

			//要让对象禁止拷贝，那么就需要禁止拷贝和赋值，则将拷贝构造函数和等号运算符声明为私有的
			//并且不提供他们的实现
	return 0;
}