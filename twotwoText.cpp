#include"Class Text.h"
int main(){
	//类的构造函数只有一个参数是非常危险的，因为编译器可以适用这个构造函数把参数的类型隐式转换为类类型
	//Text t(10);
	Text t = 10;  //- 等价于Text t(10);这里的 = 不是运算符，表示初始化。
			 //但是如果给之带一个参数的构造函数用explicit关键字修饰之后，那么这两句代码就不等价了
		//这个调用了带一个参数的构造函数，此时该构造函数只充当普通的初始化的作用

	t = 20;
		//这个才是真正的赋值操作
		//而这个就是调用了转换构造函数，也就是那个带一个参数的构造函数，不过这时候还起到了转换类型的作用
		//将这个20的整形赋值给t对象
		//调用转换构造函数将20这个整形类型转换为类类型（生成一个临时对象）
		//将临时对象赋值给t对象（调用的是“=”运算符）
		//临时对象一经复赋值过后就没有了存在的价值，此时就会被自动销毁
		//那为什么最后析构的时候最后都是20 呢，第一次析构的对象是这个临时对象是20
		//第二次析构的对象本来是10，但是10所在的这个对象当前被赋值为20，多以析构看到的也是20
	Text t2;
		//用这个方便观察临时对象到底是什么时候释放的
	t = t2;
		//这个也是赋值操作,调用的是等号运算符，如果我们自己没有实现，那么系统会提供一个默认的等号运算符

	return 0;
}